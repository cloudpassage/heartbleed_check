# example script to search for all instances of
# CVE-2014-0160 aka heartbleed
# Eric Hoffmann <ehoffmann@cloudpassage.com>

require 'oauth2'
require 'rest-client'
require 'json'

# API helper class
class API
  def initialize (key_id, secret_key, host)
    client = OAuth2::Client.new(key_id, secret_key,
                  :site => "https://#{host}",
                  :token_url => '/oauth/access_token')
    token = client.client_credentials.get_token.token
    @base = "https://#{host}/v1"
    @header = {'Authorization' => "Bearer #{token}"}
  end
  def get(url)
    RestClient.get("#{@base}/#{url}", @header){|resp, req, res, &block|
    if (200..499).include? resp.code
      resp
    else
      resp.return!(req, res, &block)
    end
    }
  end
end

# setup the account specific API-Client key/secret
# Note: read only keys are acceptable
key_id = 'xxxxxxx'
secret_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'


host = 'api.cloudpassage.com'
@api = API.new(key_id, secret_key, host)

# search for active servers
resp = @api.get("/servers?state=active")
data = JSON.parse(resp)

# setup vuln/notvuln counters
vuln = 0
notvuln = 0 

# iterate through each server, grab its issues
# from the last scheduled or manually launched
# scan
data['servers'].each do |srv|
  host = "#{srv['hostname']}, #{srv['connecting_ip_address']}"
  platform = "#{srv['platform']},#{srv['platform_version']}"
  i = @api.get("/servers/#{srv['id']}/svm")
  d = JSON.parse(i)
  matched = 0

  # only look at vulnerability issues
  begin
    d['scan']['findings'].each do |detail|
      # iterate through each CVE
      detail['cve_entries'].each do |cve|
        if cve['cve_entry'].match(/CVE-2014-0160/)
          matched = 1
          pkg = "#{detail['package_name']}, #{detail['package_version']}, #{cve['cve_entry']}"
          puts "#{host}, #{platform}, #{pkg}"
        end
      end
      if matched == 0
        if detail['package_name'].match(/^openssl(.i386|.i686|.x86_64|.noarch|$)/)
          notvuln += 1
          pkg = "#{detail['package_name']}, #{detail['package_version']}, notvuln"
          puts "#{host}, #{platform}, #{pkg}"
        end
      end
    end
  rescue => e
    # no vuln scan has completed
  end
end

puts "Checked #{data['servers'].length} servers total for OpenSSL and CVE-2014-0160"
